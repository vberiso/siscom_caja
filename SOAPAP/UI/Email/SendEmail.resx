<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>